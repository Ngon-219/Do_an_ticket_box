@{
    Layout = null; // Hoặc kiểm tra file Layout được dùng
}

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TicketBox Admin Dashboard</title>
    <script src="sweetalert2.min.js"></script>
    <link rel="stylesheet" href="sweetalert2.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.min.js"></script>
    <style>
        body {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .sidebar {
            height: 100vh;
            position: fixed;
            width: 250px;
            background: #343a40;
            color: #fff;
        }

            .sidebar a {
                color: #ddd;
                text-decoration: none;
            }

                .sidebar a:hover {
                    background: #495057;
                    color: #fff;
                }

            .sidebar .nav-link.active {
                background-color: #495057;
            }

        .content {
            margin-left: 250px;
            padding: 20px;
        }

        .navbar {
            margin-left: 250px;
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar d-flex flex-column p-3">
        <h4 class="text-center py-3 border-bottom">TicketBox Admin</h4>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a href="@Url.Action("Home", "Login")" class="nav-link active">Dashboard</a>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("Index", "User")" class="nav-link">Users</a>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("Index", "Event")" class="nav-link">Events</a>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("Index", "Report")" class="nav-link">Reports</a>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("Index", "Banner")" class="nav-link">Banner</a>
            </li>
        </ul>
    </div>

    <!-- Content Area -->
    <div class="content">
        <nav class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
            <div class="container-fluid">
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="#">Profile</a>
                        </li>
                        <li class="nav-link">
                            <a href="@Url.Action("Logout", "Login")">Logout</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <!-- Dashboard Table -->
        <div class="container mt-4">
            <h2 class="mb-4">Report Management</h2>
            <input type="text" id="searchInput" name="search" class="form-control form-control-lg" value="" placeholder="Tìm kiếm theo tên sự kiện" style="margin-bottom: 2vh;" />



            <table class="table table-bordered table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>ReportID</th>
                        <th>User Email</th>
                        <th>Event Name</th>
                        <th>Content</th>
                        <th>Rate</th>
                        <th>Ngày bắt đầu sự kiện</th>
                    </tr>
                </thead>
                <tbody id="userTableBody">
                    @*  @foreach (var user in (List<Do_an_ticket_box.Models.User>)ViewData["userData"])
                    {
                    <tr>
                    <td>@user.UserID</td>
                    <td>@(@user.UserSurname + " " + @user.UserName)</td>
                    <td>@user.Email</td>
                    <td>@user.Phone</td>
                    <td>@user.Address</td>
                    <td>@user.Created_at</td>
                    <td>@user.role</td>
                    <td>@user.gender</td>
                    <td>@user.birthday</td>
                    <td>
                    <select name="Status" class="form-control" onchange="updateStatus(this, @user.UserID, '@user.status')">
                    <option value="vertify" @(user.status == "vertify" ? "selected" : "")>Verify</option>
                    <option value="unvertify" @(user.status == "unvertify" ? "selected" : "")>Unverify</option>
                    <option value="lock" @(user.status == "lock" ? "selected" : "")>Lock</option>
                    </select>
                    </td>
                    </tr>
                    } *@
                </tbody>
            </table>
        </div>
        <div class="text-center">
            <select id="paginationSelect" class="text-center">
        </div>
        </select>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function updateStatus(selectElement, userId, preStatus) {
            const newStatus = selectElement.value;
            console.log(preStatus);

            Swal.fire({
                title: "Are you sure?",
                text: "Are you want to change status",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: 'https://localhost:7132/manager/user/UpdateStatus',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            UserID: userId,
                            status: newStatus
                        }),
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: "Your file has been deleted.",
                                    icon: "success"
                                });
                            } else {
                                console.log(response.success);
                                Swal.fire({
                                    title: "Deleted!",
                                    text: "Your file has been deleted.",
                                    icon: "error"
                                });
                            }
                        },
                        error: function (error) {
                            console.error('Error:', error);
                            alert('An error occurred.');
                        }
                    });
                } else {
                    console.log("ahihi");
                    selectElement.value = preStatus;
                }
            });
        }

        $(document).ready(function () {
            loadUsers(1);
            $('#paginationSelect').on('change', function () {
                const selectedPage = $(this).val();
                loadUsers(selectedPage);
            });

            document.getElementById('searchInput').addEventListener('keydown', function (event) {
                const valueSearch = document.getElementById('searchInput').value;
                if (event.key === 'Enter') {
                    event.preventDefault();

                    $.ajax({
                        url: `/manager/report/Search`,
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            search: valueSearch
                        }),
                        success: function (response) {
                            if (response.success) {
                                console.log(response);
                                renderTable(response.reportData);
                                const select = document.getElementById('paginationSelect');
                                select.innerHTML = '';
                                for (let i = 1; i <= response.totalPages; i++) {
                                    const option = document.createElement("option");
                                    option.value = i;
                                    option.textContent = i;
                                    select.appendChild(option);
                                }
                                select.value = response.currentPage;
                            } else {
                                Swal.fire("Error", response.message, "error");
                            }
                        },
                        error: function (error) {
                            console.error('Error:', error);
                        }
                    });
                }
            });


            function loadUsers(page) {
                console.log(page);
                $.ajax({
                    url: `/manager/report/pagnination/?page=${page}`, // Đường dẫn API xử lý
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            console.log(response);
                            renderTable(response.reportData);
                            const select = document.getElementById('paginationSelect');
                            select.innerHTML = '';
                            for (let i = 1; i <= response.totalPages; i++) {
                                const option = document.createElement("option");
                                option.value = i;
                                option.textContent = i;
                                select.appendChild(option);
                            }
                            select.value = response.currentPage;
                        } else {
                            Swal.fire("Error", response.message, "error");
                        }
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            }

            function formatDate(dateString) {
                const date = new Date(dateString);
                return date.toLocaleDateString("vi-VN", { day: "2-digit", month: "2-digit", year: "numeric" });
            }

            function renderTable(reports) {
                const tbody = $('#userTableBody');
                tbody.empty(); // Xóa nội dung cũ

                reports.forEach(report => {
                    tbody.append(`
                                <tr>
                                    <td>${report.report_id}</td>
                                    <td>${report.useremail}</td>
                                    <td>${report.eventName}</td>
                                    <td>${report.report}</td>
                                    <td>${report.reportRate}</td>
                                    <td>${moment(report.eventStart).format("YYYY-MM-DD HH:mm:ss")}</td>
                                    <td>
                                                        <a href=${"https://localhost:7132/myevent/details/" + report.event_id}>details</a>
                                    </td>
                                </tr>
                            `);
                });
            }
        });



    </script>
</body>
</html>
